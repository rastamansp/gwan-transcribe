version: '3.8'

services:
  # Backend API
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://user:pass@db:5432/gwan_dev
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password
      - RABBITMQ_URL=amqp://rabbitmq:5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=password
      - EMAIL_HOST=mailhog
      - EMAIL_PORT=1025
      - EMAIL_USER=dev@gwan.br
      - EMAIL_PASS=dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - db
      - minio
      - rabbitmq
      - mailhog

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_APP_NAME=Gwan Transcribe
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=gwan_dev
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d gwan_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO Storage
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      - MH_STORAGE=memory

volumes:
  postgres_data:
  minio_data:
  rabbitmq_data:

networks:
  default:
    name: gwan-transcribe-dev 